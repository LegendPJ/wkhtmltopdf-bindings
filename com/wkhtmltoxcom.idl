import "unknwn.idl";

[ 
 object, 
 uuid(D4237C0E-3AB5-4155-B508-DB6523F06448),
 helpstring("interface for wkhtmltopdf")
]
interface IWkHtmlToPdf: IUnknown {
  HRESULT extendedQt([out] BOOL * res);
  HRESULT version(const char * * version);

  HRESULT createGlobalSettings([out] int * object);
  HRESULT createObjectSettings([out] int * object);

  HRESULT setGlobalSetting([in] int settings, [in] const char * name, [in] const char * value);
  HRESULT getGlobalSetting([in] int settings, [in] const char * name, [out] char * value, [in] int vs);
  HRESULT setObjectSetting([in] int settings, [in] const char * name, [in] const char * value);
  HRESULT getObjectSetting([in] int settings, [in] const char * name, [out] char * value, [in] int vs);
  
  HRESULT createConverter([in] int globalSettings, [out] int * converter);
  HRESULT destroyConverter([in] int converter);
  
  HRESULT convert([in] int converter);
  HRESULT addResource([in] int converter, [in] int settings, [in] const char * data);
  HRESULT currentPhase([in] int converter, [out] int * currentPhase);
  HRESULT phaseCount([in] int converter, [out] int * phaseCount);
  HRESULT phaseDescription([in] int converter, [in] int phase, const char * *);
  HRESULT progressString([in] int converter, const char * * );
  HRESULT httpErrorCode([in] int converter, [out] int * errorCode);
};

[ 
 object, 
 uuid(B5A47297-C545-4A8F-95D5-1356D90B866E),
 helpstring("interface for wkhtmltoimage")
]
interface IWkHtmlToImage: IUnknown {
  HRESULT extendedQt([out] BOOL * res);
  HRESULT version(const char * * version);

  HRESULT createGlobalSettings([out] int * object);

  HRESULT setGlobalSetting([in] int settings, [in] const char * name, [in] const char * value);
  HRESULT getGlobalSetting([in] int settings, [in] const char * name, [out] char * value, [in] int vs);
  
  HRESULT createConverter([in] int globalSettings, [out] int * converter);
  HRESULT destroyConverter([in] int converter);
  
  HRESULT convert([in] int converter);
  HRESULT currentPhase([in] int converter, [out] int * currentPhase);
  HRESULT phaseCount([in] int converter, [out] int * phaseCount);
  HRESULT phaseDescription([in] int converter, [in] int phase, const char * *);
  HRESULT progressString([in] int converter, const char * * );
  HRESULT httpErrorCode([in] int converter, [out] int * errorCode);
};

[
 uuid(9F85CA63-DAFF-4A7F-8D71-C1C4F4B77F8D),
 helpstring("Interfaces for htmltox")
]

library WkHtmlToXLib {
  interface IWkHtmlToPdf;
  interface IWkHtmlToImage;
};
